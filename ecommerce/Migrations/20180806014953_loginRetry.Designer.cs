// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ecommerce.Data;

namespace ecommerce.Migrations
{
    [DbContext(typeof(EcomDbContext))]
    [Migration("20180806014953_loginRetry")]
    partial class loginRetry
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ecommerce.Models.Basket", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsComplete");

                    b.Property<string>("UserID");

                    b.HasKey("ID");

                    b.ToTable("BasketTable");
                });

            modelBuilder.Entity("ecommerce.Models.BasketItem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BasketID");

                    b.Property<int?>("OrderID");

                    b.Property<int>("ProductID");

                    b.Property<int>("Quantity");

                    b.HasKey("ID");

                    b.HasIndex("BasketID");

                    b.HasIndex("OrderID");

                    b.HasIndex("ProductID");

                    b.ToTable("BasketItemTable");
                });

            modelBuilder.Entity("ecommerce.Models.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address1");

                    b.Property<string>("Address2");

                    b.Property<int>("BasketID");

                    b.Property<string>("City");

                    b.Property<string>("CreditCard");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<DateTime>("OrderDate");

                    b.Property<int>("State");

                    b.Property<decimal>("Total");

                    b.Property<string>("UserID");

                    b.Property<string>("ZipCode");

                    b.HasKey("ID");

                    b.ToTable("OrderTable");
                });

            modelBuilder.Entity("ecommerce.Models.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Image");

                    b.Property<string>("Name");

                    b.Property<decimal>("Price");

                    b.Property<string>("Sku");

                    b.HasKey("ID");

                    b.ToTable("Products");

                    b.HasData(
                        new { ID = 1, Description = "Make a squirrel who eats from this feeder look like it had a massive cat face", Image = "https://cdn.shopify.com/s/files/1/1365/2497/products/Cat-Head-Squirrel-Feeder_1600x.jpg?v=1520533809", Name = "Cat Head Squirrel Feeder", Price = 14.99m, Sku = "MNAG0001" },
                        new { ID = 2, Description = "A tin of mints featuring a squirrel in underpants. Keep your breathe nutty fresh.", Image = "https://cdn.shopify.com/s/files/1/1365/2497/products/Squirrel-in-Underpants-Mints_1600x.jpg?v=1520533849", Name = "Squirrel in Underpants Mints", Price = 3.99m, Sku = "MNAG0002" },
                        new { ID = 3, Description = "Ever wanted your hand to be a squirrel? Now you can with these finger puppets. Includes four paws and a squirrel head.", Image = "https://cdn.shopify.com/s/files/1/1365/2497/products/handisquirrel-Box_1600x.jpg?v=1520533725", Name = "Handisquirrel - Squirrel Finger Puppet", Price = 6.99m, Sku = "MNAG0003" },
                        new { ID = 4, Description = "This hard vinyl 3-3/4” action figure will be with you through thick and thin. Maggie Squirrel is also a doctor and artist. She has devoted her life to healing the sick and doing paintings of Abraham Lincoln doing odd things like playing badminton and shopping for underpants. One of her paintings, Abraham Lincoln making a macaroni necklace for his mother, recently sold for over $5,000.", Image = "https://cdn.shopify.com/s/files/1/1365/2497/products/maggie-squirrel-strange-friends-action-figure_1600x.jpg?v=1520535597", Name = "Maggie - Squirrel Action Figure", Price = 9.95m, Sku = "MNAG0004" },
                        new { ID = 5, Description = "This sunshade will not only protect and cool your car while blocking UV rays, it will also make it appear like it’s full of a squad of sassy squirrels. At 50\" x 27 - 1 / 2\", it’s big enough for most cars. It’s too big for a mini, too small for a truck. Includes two suction cups for simple installation. Folds for easy storage. Metalized polyester laminate.", Image = "https://cdn.shopify.com/s/files/1/1365/2497/products/car-full-of-squirrels-auto-sunshade_1600x.jpg?v=1520533891", Name = "Squirrels throwing shade", Price = 15.00m, Sku = "MNAG0005" },
                        new { ID = 6, Description = "This pin is made of diecast metal and enamel and is 1-1/2” tall.", Image = "https://cdn.shopify.com/s/files/1/1365/2497/products/squirrel-in-red-dress-strange-pin_1600x.jpg?v=1520533794", Name = "Lady Squirrel Pin", Price = 7.99m, Sku = "MNAG0006" },
                        new { ID = 7, Description = "Every tree needs a squirrel in underpants. In fact, we think you'd be nuts not to have one! Made of glass, it's 4\" tall and includes string or can stand on its own", Image = "https://cdn.shopify.com/s/files/1/1365/2497/products/squirrel_in_underpants_ornament_1600x.jpg?v=1520535285", Name = "Underpants Squirrel-nament", Price = 6.99m, Sku = "MNAG0007" },
                        new { ID = 8, Description = "It's a 5\" x 7\" card, with envelope, that expresses your honest emotions in a weird and measured way", Image = "https://cdn.shopify.com/s/files/1/1365/2497/products/Squirrel_Birthday_Card_1600x.jpg?v=1520535512", Name = "Happy Birthday, Squirrel Friend - Card", Price = 2.99m, Sku = "MNAG0008" },
                        new { ID = 9, Description = "These ceramic Squirrel Salt and Pepper Shakers will amuse anyone who has ever fantasized about seasoning food with the disembodied heads of tree rats. ", Image = "https://cdn.shopify.com/s/files/1/1365/2497/products/squirrel_salt_and_pepper_shakers_1600x.jpg?v=1520534553", Name = "Squirrel Shakers", Price = 5.99m, Sku = "MNAG0009" },
                        new { ID = 10, Description = "Full-sized, adult latex Squirrel Mask. Perfect for all occasions (except dog sitting).", Image = "https://cdn.shopify.com/s/files/1/1365/2497/products/12293-SquirrelMask-Trees03-1_1600x.jpg?v=1520534463", Name = "Squirrel Mask", Price = 6.99m, Sku = "MNAG00010" }
                    );
                });

            modelBuilder.Entity("ecommerce.Models.BasketItem", b =>
                {
                    b.HasOne("ecommerce.Models.Basket")
                        .WithMany("BasketItems")
                        .HasForeignKey("BasketID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ecommerce.Models.Order")
                        .WithMany("BasketItems")
                        .HasForeignKey("OrderID");

                    b.HasOne("ecommerce.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
